// <auto-generated />
using System;
using Biblioteca.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Biblioteca.Migrations
{
    [DbContext(typeof(BiblioDatabaseContext))]
    [Migration("20221111223946_lectorcambios")]
    partial class lectorcambios
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.31")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Biblioteca.Models.Libro", b =>
                {
                    b.Property<int>("IdLibro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Disponibilidad")
                        .HasColumnType("bit");

                    b.Property<int>("Ejemplares")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rutaImagen")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdLibro");

                    b.ToTable("Libros");
                });

            modelBuilder.Entity("Biblioteca.Models.Persona", b =>
                {
                    b.Property<int>("IdPersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPersona");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("Biblioteca.Models.Prestamo", b =>
                {
                    b.Property<int>("IdPrestamo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaDevolucion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaToma")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdLibro")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("IdPersona")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<bool>("devolucion")
                        .HasColumnType("bit");

                    b.Property<int?>("libroIdLibro")
                        .HasColumnType("int");

                    b.Property<int?>("personaIdPersona")
                        .HasColumnType("int");

                    b.HasKey("IdPrestamo");

                    b.HasIndex("libroIdLibro");

                    b.HasIndex("personaIdPersona");

                    b.ToTable("Prestamos");
                });

            modelBuilder.Entity("Biblioteca.Models.Prestamo", b =>
                {
                    b.HasOne("Biblioteca.Models.Libro", "libro")
                        .WithMany("Prestamos")
                        .HasForeignKey("libroIdLibro");

                    b.HasOne("Biblioteca.Models.Persona", "persona")
                        .WithMany("Prestamos")
                        .HasForeignKey("personaIdPersona");
                });
#pragma warning restore 612, 618
        }
    }
}
